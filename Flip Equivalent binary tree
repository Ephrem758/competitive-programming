# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def flipEquiv(self, root1: Optional[TreeNode], root2: Optional[TreeNode]) -> bool:

        def bfs(root1,root2):
            if not root1 and not root2:
                return True

            if (not root1 and root2) or (root1 and not root2):
                
                return False
            
            if root1.val != root2.val:
               
                return False

            return (bfs(root1.left,root2.right) and bfs(root1.right,root2.left)) or (bfs(root1.left,root2.left) and bfs(root1.right,root2.right))
        
        
        return bfs(root1,root2)
