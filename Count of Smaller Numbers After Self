class Solution:
    def countSmaller(self, nums: List[int]) -> List[int]:

        count = [0] * len(nums)
        tup = []
        for i in range(len(nums)):
            tup.append([nums[i],i])

        def mergeSort(arr):     
            if len(arr)>1:  
                left_half = arr[:len(arr)//2]
                right_half = arr[len(arr)//2:]
                mergeSort(left_half)
                mergeSort(right_half)
                i,j,k = 0,0,0

                l,r = len(left_half)-1,len(right_half)-1

                while l >= 0 and r >= 0:
                    if left_half[l][0] > right_half[r][0]:
                            count[left_half[l][1]] += (r+1)
                          
                            l-=1
                    else:
                        r-=1
                    
            
                while i < len(left_half) and j < len(right_half): 

                    if left_half[i] <= right_half[j]:
                        arr[k] = left_half[i]  
                        i+=1
                    else:
                        arr[k] = right_half[j]    
                        j+=1
                    k+=1
                while i <len(left_half):
                    arr[k] = left_half[i]
                    i+=1
                    k+=1
                while j < len(right_half):
                    arr[k] = right_half[j]
                    j+=1
                    k+=1           

                return arr
        mergeSort(tup)
        return count
