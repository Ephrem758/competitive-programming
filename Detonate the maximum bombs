class Solution:
    def maximumDetonation(self, bombs: List[List[int]]) -> int:
        graph = defaultdict(list)
        for i in range(len(bombs)):
            for j in range(len(bombs)):
                if i==j:
                    continue
                if bombs[i][2]>= math.sqrt((bombs[i][0]-bombs[j][0])**2 + (bombs[i][1]-bombs[j][1])**2):
                    graph[i].append(j)

        def dfs(node):
            for child in graph[node]:
                if child not in visited:
                    visited.add(child)
                    dfs(child)
        res = 0
        for i in range(len(bombs)):
            visited=set()
            visited.add(i)
            dfs(i)
            res = max(res,len(visited))
        return r