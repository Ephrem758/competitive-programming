class Solution:
    def countSubIslands(self, grid1: List[List[int]], grid2: List[List[int]]) -> int:
        row,col = len(grid2),len(grid2[0])
        dire = [[1,0],[0,1],[-1,0],[0,-1]]
        visited = set()
       

        def isValid(r,c):
            return (0 <= r < row) and (0 <=c < col)

        def dfs(r,c):
            ans = 1
            if grid1[r][c]==0:
                ans = 0

           
            for i,j in dire:
                new_row,new_col = r+i,c+j
                if isValid(new_row,new_col) and (new_row,new_col) not in visited and grid2[new_row][new_col]:
                    visited.add((new_row,new_col))
                    ans = ans & dfs(new_row,new_col)
            return ans
            
          
        res = 0
        for k in range(row):
            for l in range(col):
                if grid2[k][l]==1 and (k,l) not in visited:
                    visited.add((k,l))
                    res+=dfs(k,l)
        return res