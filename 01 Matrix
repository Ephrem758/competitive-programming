class Solution:
    def updateMatrix(self, mat: List[List[int]]) -> List[List[int]]:
        n,m = len(mat),len(mat[0])
        direction = [[0,1],[1,0],[-1,0],[0,-1]]
        visited = set()
        def inbound(r,c):
            return 0<=r<n and 0<=c<m and (r,c) not in visited

        res = [[None for i in range(m)] for j in range(n)]
        queue = deque()
        for i in range(n):
            for j in range(m):
                if not mat[i][j]:
                    queue.append([i,j,0])
                    visited.add((i,j))
        while queue:
            r,c,count = queue.popleft()
            res[r][c]=count
            for i,j in direction:
                new_row,new_col = r+i,c+j
                if inbound(new_row,new_col):
                    visited.add((new_row,new_col))
                    queue.append([new_row,new_col,count+1])
        return res
