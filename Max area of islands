class Solution:
    def maxAreaOfIsland(self, grid: List[List[int]]) -> int:
        n,m = len(grid),len(grid[0])
        dire = [[1,0],[0,1],[-1,0],[0,-1]]
        visited = set()
        def isValid(r,c):
            return 0<=r<n and 0 <=c<m

        # count = [0]
        def dfs(r,c):

            visited.add((r,c)) 
            count = 1
            for i,j in dire:
                new_row,new_col = r+i,c+j
                if isValid(new_row,new_col) and (new_row,new_col) not in visited and grid[new_row][new_col]==1:
                    count+= dfs(new_row,new_col)
            
            return count
        res = 0
        for i in range(n):
            for j in range(m):
                if grid[i][j]==1 and (i,j) not in visited:
                    count = dfs(i,j)
                    res = max(res,count)   
        return res