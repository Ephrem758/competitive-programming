class Solution:
    def numEnclaves(self, grid: List[List[int]]) -> int:
        n,m = len(grid),len(grid[0])
        dire = [[0,1],[1,0],[-1,0],[0,-1]]
        visited = set()

        def isValid(r,c):
            return (0 <= r < n) and (0 <= c < m)
        

        def dfs(r,c):
            if not isValid(r,c) or (not grid[r][c]) or (r,c) in visited:
                return False

            visited.add((r,c))
            
            res = 1
            for dr,dc in dire:
                res+=dfs(r+dr,dc+c)
            return res

        
        land,border = 0,0
    
        for i in range(n):
            for j in range(m):
                land+=grid[i][j]
                if (grid[i][j]) and ((i,j) not in visited )and (i in [0,n-1] or j in [0,m-1]):
                    border+=dfs(i,j)
                    
        return land - border
